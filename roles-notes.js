[{"content":"import { render, screen } from '@testing-library/react';\n\nfunction RoleExample() {\n  return (\n    <div>\n      <a href=\"/\">Link</a>\n      <button>Button</button>\n      <footer>ContentInfo</footer>\n      <h1>Heading</h1>\n      <header>Banner</header>\n      <img alt=\"description\" /> Img\n      <input type=\"checkbox\" /> Checkbox\n      <input type=\"number\" /> Spinbutton\n      <input type=\"radio\" /> Radio\n      <input type=\"text\" /> Textbox\n      <li>Listitem</li>\n      <ul>Listgroup</ul>\n    </div>\n  );\n}\n\nrender(<RoleExample />);","type":"code","id":"6uycg"},{"content":"test('can find elements by role', () => {\n  render(<RoleExample />);\n\n  const roles = [\n    'link',\n    'button',\n    'contentinfo',\n    'heading',\n    'banner',\n    'img',\n    'checkbox',\n    'spinbutton',\n    'radio',\n    'textbox',\n    'listitem',\n    'list',\n  ];\n\n  for (let role of roles) {\n    const el = screen.getByRole(role);\n\n    expect(el).toBeInTheDocument();\n  }\n});","type":"code","id":"ipe13"},{"content":"function AccessibleName() {\n  return (\n    <div>\n      <button>Submit</button>\n      <button>Cancel</button>\n    </div>\n  );\n}\n\nrender(<AccessibleName />)","type":"code","id":"vmct8"},{"content":"test('can select by accessible name', () => {\n  render(<AccessibleName />);\n\n  const submitButton = screen.getByRole('button', {\n    name: /submit/i,\n  });\n  const cancelButton = screen.getByRole('button', {\n    name: /cancel/i,\n  });\n\n  expect(submitButton).toBeInTheDocument();\n  expect(cancelButton).toBeInTheDocument();\n});","type":"code","id":"69u1k"},{"content":"function MoreNames() {\r\n  return (\r\n    <div>\r\n      <label htmlFor='email'>Email</label>\r\n      <input id='email'/>\r\n      <label htmlFor='search'>Search</label>\r\n      <input id='search'/>\r\n    </div>\r\n  )\r\n}\r\nrender(<MoreNames />)","type":"code","id":"9w644"},{"content":"test('shows an email and search input', () => {\n  render(<MoreNames />);\n\n  const emailInput = screen.getByRole('textbox', {\n    name: /email/i,\n  });\n\n  const searchInput = screen.getByRole('textbox', {\n    name: /search/i,\n  });\n\n  expect(emailInput).toBeInTheDocument();\n  expect(searchInput).toBeInTheDocument();\n});","type":"code","id":"zf9zf"},{"content":"function IconButtons() {\r\n  return (\r\n    <div>\r\n      <button aria-label='sign in'>\r\n        <svg />\r\n      </button>\r\n\r\n      <button aria-label='sign out'>\r\n        <svg />\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nrender(<IconButtons />)","type":"code","id":"31r45"},{"content":"test('find elements based on label', () => {\r\n  render(<IconButtons />)\r\n\r\n  const signInButton = screen.getByRole('button', {\r\n    name: /sign in/i\r\n  })\r\n\r\n  const signOutButton = screen.getByRole('button', {\r\n    name: /sign out/i\r\n  })\r\n\r\n  expect(signInButton).toBeInTheDocument()\r\n  expect(signOutButton).toBeInTheDocument()\r\n})","type":"code","id":"0cbxt"}]